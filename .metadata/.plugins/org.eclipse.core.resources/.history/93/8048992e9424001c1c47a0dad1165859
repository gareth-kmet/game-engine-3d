package mainLoop;

import org.lwjgl.LWJGLException;
import org.lwjgl.Sys;
import org.lwjgl.input.Keyboard;
import org.lwjgl.input.Mouse;
import org.lwjgl.opengl.Display;
import org.lwjgl.opengl.DisplayMode;
import org.lwjgl.opengl.GL11;
import org.lwjgl.opengl.GL13;
import org.lwjgl.opengl.PixelFormat;
import org.lwjgl.opengl.ContextAttribs;

public class DisplayManager {
	
	private static final int WIDTH = 1480, HEIGHT = 1200, FPS_CAP = 120;
	
	private static long lastFrameTime;
	private static float delta;
	
	private static int frames = 0;
	private static long totalTime = 0;
	private static long lastCheckedTime = 0;
	private static float fps = 0;
	
	public static void createDisplay() {
		
		ContextAttribs attribs = new ContextAttribs(3,3)
		.withForwardCompatible(true)
		.withProfileCore(true);
		
	
		try {
			Display.setDisplayMode(new DisplayMode(WIDTH, HEIGHT));
			Display.setResizable(true);
			Display.create(new PixelFormat().withDepthBits(32), attribs);
			Display.setTitle("Title");
			GL11.glEnable(GL13.GL_MULTISAMPLE);
		} catch (LWJGLException e) {
			e.printStackTrace();
		}
		
		Mouse.setGrabbed(true);
		GL11.glViewport(0, 0, WIDTH, HEIGHT);
		lastFrameTime=getCurrentTime();
		lastCheckedTime=getCurrentTime();
	}

	
	public static void updateDisplay() {
		
		Display.sync(FPS_CAP);
		
		Display.update();
		long currentFramTime=getCurrentTime();
		delta=(currentFramTime-lastFrameTime)/1000f;
		lastFrameTime=currentFramTime;
		
		frames++;
		totalTime+=currentFramTime-lastCheckedTime;
		lastCheckedTime=currentFramTime;
		
		if(totalTime>=1000) {
			fps=frames/(totalTime*0.001f);
			totalTime=0;
			frames=0;
		}
		
		
		

	}
	
	public static float getFPS() {
		return fps;
	}
	
	public static float getFrameTimeSeconds() {
		return delta;
	}
	
	public static void closeDisplay() {
		
		Display.destroy();
	}
	
	private static long getCurrentTime() {
		return Sys.getTime()*1000/Sys.getTimerResolution();
	}
}
